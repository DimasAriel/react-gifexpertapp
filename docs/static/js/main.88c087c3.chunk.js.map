{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAmBjD,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQlB,SACE,uBACKO,KAAK,OACLC,MAAOT,EACPU,SArBe,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,mCCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG7Ca,QAAQC,IAAIR,GAbW,kBAchBA,GAdgB,4CAAH,sDCGHS,EAAc,SAAC,GAAkB,IAAjBL,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKgB,UAAU,yCAAf,UAEI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgCtC,OAzBJC,qBAAW,WAEP1B,EAAQC,GACP0B,MAAK,SAAAhB,GAEDiB,YAAY,WACZZ,QAAQC,IAAIN,GACTc,EAAS,CACLjB,KAAMG,EACNY,SAAS,MAGb,UAGT,CAACtB,IAUOuB,ED3BwBK,CAAa5B,GAArCsB,EAH4B,EAG5BA,QAAcT,EAHc,EAGnBN,KAgBhB,OACI,qCAEC,oBAAIW,UAAU,yCAAd,SAAwDlB,IAGxDsB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACI,6BAEOL,EAAOJ,KAAK,SAAAC,GAAG,OAKX,aAJA,CAIC,EAAD,eAEIA,GADCA,EAAIC,eEpCnBkB,EAAe,WAAM,MAKE3C,mBAAS,CAAC,cALZ,mBAK3B4C,EAL2B,KAKf7C,EALe,KAc9B,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC7B,uBAIH,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEAA,SAAUA,GADLA,Y,MC3BzB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.88c087c3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AddCategory({setcategories}) {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            \r\n            setcategories(catg => [ inputValue, ...catg]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit Hecho') \r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n               type=\"text\"\r\n               value={inputValue}\r\n               onChange={handleInputChange}\r\n          />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=V077zbUh0OWC92daTWzCJsBTCChkNPSa`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n       return{\r\n           id: img.id,\r\n           title: img.title,\r\n           url: img.images?.downsized_medium.url\r\n       }\r\n    });\r\nconsole.log(gifs)\r\nreturn gifs;\r\n// setImages(gifs);\r\n\r\n}","import React from 'react'\r\n\r\n// export const GifGridItem = (props) => {\r\n    export const GifGridItem = ({title, url}) => {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title}  />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGift } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {loading, data:images} = useFetchGifs(category);\r\n    // const [count, setcount] = useState(0);\r\n \r\n    // const [images, setImages] = useState([])\r\n    \r\n     \r\n\r\n    // useEffect(() =>{\r\n    //     getGift(category)\r\n    //     .then(setImages);\r\n    // }, [category])\r\n\r\n    \r\n\r\n    // getGift();\r\n\r\n    return (\r\n        <>\r\n         \r\n         <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\r\n         {/* {loading ? 'cargando...' : 'Data Cargada'} */}\r\n        \r\n        {loading && <p className=\"card animate__animated animate__flash\">Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            <ol>\r\n               {\r\n                   images.map( img =>(\r\n                       // ({id, title})\r\n                       //    <li key={id}>\r\n                       //  {title}\r\n                       //   </li>\r\n                       <GifGridItem\r\n                       key={img.id}\r\n                       {...img} \r\n                       // img={img}\r\n                       />\r\n                       ))\r\n                    }\r\n            </ol>\r\n            </div>\r\n            </>\r\n)\r\n}\r\n\r\n /*           {/* <h2>{count}</h2>\r\n            <button onClick={()=> setcount(count + 1)}></button> \r\n        {/* </div> *//**/\r\n","import { useEffect, useState } from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\nuseEffect( () => {\r\n    \r\n    getGifs(category)\r\n    .then(img => {\r\n\r\n         setTimeout( () => {\r\n         console.log(img)\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            });\r\n\r\n         }, 3000);\r\n    })\r\n    \r\n}, [category])\r\n\r\n\r\n    // setTimeout( () => {\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     }) \r\n    // }, 3000);\r\n\r\n    return state; //{data:[], loading: true};\r\n\r\n}\r\n","//rafc para llamar la importacion y la constante con el return\r\nimport React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  //  const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n//   const [categories, setcategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\nconst [categories, setcategories] = useState(['One Punch']);\r\n\r\n//   const handleAdd = () => {\r\n\r\n//     // setcategories([...categories, 'One Pieces']);\r\n//     // setcategories( catg => [...categories, 'One Pieces']);\r\n\r\n//   }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories}/>\r\n           <hr/>\r\n           \r\n           {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n                    //  <li key={category}>{category}</li>\r\n                    <GifGrid\r\n                    key={category}\r\n                    category={category}\r\n                    />\r\n                    ))\r\n            }\r\n        </ol>\r\n\r\n        </>   \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}